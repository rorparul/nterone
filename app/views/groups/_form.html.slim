.form-container
  = form_for [platform, subject, group], remote: true do |f|
    - if group.errors.any?
      .alert.alert-danger.alert-dismissible
        button.close type="button" data-dismiss="alert" aria-label="Close"
          span aria-hidden="true" &times;
        h4 = "#{pluralize(group.errors.count, 'error')}:"
        ul
          - group.errors.full_messages.each do |msg|
            li = msg

    = f.hidden_field :subject_ids, value: subject.id

    .form-group
      = f.label :header, t('partial.groups.form.header')
      = f.text_field :header, class: 'form-control input-sm'

    label.group-items-header
      = t 'partial.groups.form.table_items'
    hr.group-items-divider
    - if group.id
      ul#group-items
        = f.fields_for :group_items, group.group_items.sort_by(&:position), include_id: false do |group_item|
          = render 'group_item_fields', f: group_item,
                                        type: group_item.object.groupable_type,
                                        subjects: subjects,
                                        courses: courses,
                                        exam_and_course_dynamics: exam_and_course_dynamics,
                                        dividers: dividers,
                                        custom_items: custom_items
        .links
          = link_to_add_association t('partial.groups.form.insert_certification'),         f, :group_items,
            render_options: {locals: {type: 'Subject',              subjects: subjects}}
          = link_to_add_association t('partial.groups.form.insert_course'),                f, :group_items,
            render_options: {locals: {type: 'Course',               courses: courses}}
          = link_to_add_association t('partial.groups.form.insert_exam_course'),           f, :group_items,
            render_options: {locals: {type: 'ExamAndCourseDynamic', exam_and_course_dynamics: exam_and_course_dynamics}}
          = link_to_add_association t('partial.groups.form.insert_divider'),               f, :group_items,
            render_options: {locals: {type: 'Divider',              dividers: dividers}}
          = link_to_add_association t('partial.groups.form.insert_custom_item'),           f, :group_items,
            render_options: {locals: {type: 'CustomItem',           custom_items: custom_items}}
    - else
      ul#group-items
        = f.fields_for :group_items, include_id: false do |group_item|
          = render 'group_item_fields', f: group_item,
                                        type: nil
        .links
          = link_to_add_association t('partial.groups.form.insert_certification'),         f, :group_items,
            render_options: {locals: {type: 'Subject',              subjects: subjects}}
          = link_to_add_association t('partial.groups.form.insert_course'),                f, :group_items,
            render_options: {locals: {type: 'Course',               courses: courses}}
          = link_to_add_association t('partial.groups.form.insert_exam_course'),           f, :group_items,
            render_options: {locals: {type: 'ExamAndCourseDynamic', exam_and_course_dynamics: exam_and_course_dynamics}}
          = link_to_add_association t('partial.groups.form.insert_divider'),               f, :group_items,
            render_options: {locals: {type: 'Divider',              dividers: dividers}}
          = link_to_add_association t('partial.groups.form.insert_custom_item'),           f, :group_items,
            render_options: {locals: {type: 'CustomItem',           custom_items: custom_items}}

    .form-buttons
      button.btn.btn-success type="submit"
        = t 'generic.button.save'
      button.btn.btn-default type="button" data-dismiss="modal"
        = t 'generic.button.cancel'
      - if group.id
        = link_to t('generic.action.delete'), platform_subject_group_path(platform, subject, group), method: :delete, data: {confirm: t('generic.prompt.confirm_delete')}, class: 'text-danger'

javascript:
  $("#group-items").sortable({
    handle: "span.fa.fa-bars",
    cursor: "move"
  });

  $("button[type='submit']").on('click', function(e) {
    e.preventDefault();
    console.log($(".position"));
    $.each($('.position'), function(k, v) {
      console.log(k);
      console.log(v);
      $(v).val(k);
    });
    $(this).closest('form').submit();
  });
