= form_for resource, as: resource_name, url: registration_path(resource), html: { "data-parsley-validate" => true } do |f|
  = devise_error_messages!

  input type="hidden" value="M360-Source" name="M360-Source"
  = f.hidden_field :source_name,    value: cookies[:source_name]
  = f.hidden_field :source_user_id, value: cookies[:source_user_id]

  = f.text_field  :first_name, autofocus: true,  placeholder: t('default.label.first_name'),    class: 'form-control sign-in-field session-input',          required: true
  = f.text_field  :last_name,  autofocus: false, placeholder: t('default.label.last_name'),     class: 'form-control sign-in-field session-input',          required: true
  = f.email_field :email,      autofocus: false, placeholder: t('default.label.email'), class: 'form-control regEmail sign-in-field session-input', required: true

  = f.country_select :country,  {include_blank: 'Select Country'},class: 'form-control country_field session-input country-state', required: true
  
  div.state-input-div style="display: none;"
    = f.select :state, options_for_select(CS.states(:us).map{|k,v| [v,k]},{selected: f.object.state}),{include_blank: 'Select State'}, class: 'form-control session-input country-state state-input'

  - if @validatable
    em = "(#{@minimum_password_length} #{t('devise.registrations.new.copy1')})"
    br
  = f.password_field :password,              autocomplete: "off", placeholder: t('default.label.password'),         class: 'form-control sign-in-field session-input', id: 'password',         required: true
  = f.password_field :password_confirmation, autocomplete: "off", placeholder: t('default.label.password_confirmation'), class: 'form-control sign-in-field session-input', id: 'confirm-password', required: true
  #instructions style="margin-bottom: 12px;"
    = t('devise.registrations.new.instructions')

  - if @special_event || resource.interest
    div style="margin-top: 12px;"
      = text_field_tag 'poker_chip_number', nil, placeholder: t('devise.registrations.new.poker_chip_number'), class: 'form-control sign-in-field session-input'

    p style="margin-top: 12px;"
      = t 'devise.registrations.new.copy2'
    - resource.build_interest
    = f.fields_for :interest do |ff|
      .checkbox
        label
          = ff.check_box :data_center
          = t('devise.registrations.new.data_center')
      .checkbox
        label
          = ff.check_box :collaboration
          = t('devise.registrations.new.collaboration')
      .checkbox
        label
          = ff.check_box :network
          = t('devise.registrations.new.network')
      .checkbox
        label
          = ff.check_box :security
          = t('devise.registrations.new.security')
      .checkbox
        label
          = ff.check_box :associate_level_certification
          = t('devise.registrations.new.associate_level')
      .checkbox
        label
          = ff.check_box :professional_level_certification
          = t('devise.registrations.new.professional_level')
      .checkbox
        label
          = ff.check_box :expert_level_certification
          = t('devise.registrations.new.expert_level')
      p
        = t('devise.registrations.new.other')
      div style="margin-bottom: 14px;"
        = ff.text_field :other, class: 'form-control sign-in-field session-input'

  #recapcha
    = recaptcha_tags
  = f.submit t('default.action.register'), class: 'btn btn-lg btn-primary btn-block', id: 'newUser'
  br
  .or
    = image_tag asset_path('or.png')
  = link_to t('default.action.login'), new_session_path(resource_name), class: 'btn btn-lg btn-primary btn-block', id: 'LogIn-bt'


javascript:
  $(document).ready(function() {
    if( ($(".country_field").val() == "US") || ($(".country_field").val() == "MX") || ($(".country_field").val() == "CA") ){
      $('.state-input-div').show()
      $(".state-input").prop('required', "true")
    }
    if(($(".country_field").val() != "US") || ($(".country_field").val() != "MX") || ($(".country_field").val() != "CA") ){
      $(".state-input").removeAttr('required')
    }
  });
    $(".country_field").change(function(){
      country = $(this).val()
      if(country == "US" || country == "MX" || country == "CA"){
        $('.state-input-div').show()
        $(".state-input").prop('required', "true")
        $.ajax({
          type: "GET",
          url: '/country_state',
          data: {'country': country},
          dataType: 'script'
        });
      }else{
        $('.state-input-div').hide()
        $(".state-input").removeAttr('required')
      }
    })
