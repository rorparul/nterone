.form-container
  = form_for [platform, video_on_demand], remote: false do |f|
    - if video_on_demand.errors.any?
      .alert.alert-danger.alert-dismissible
        button.close type="button" data-dismiss="alert" aria-label="Close"
          span aria-hidden="true" &times;
        h4 = "#{pluralize(video_on_demand.errors.count, 'error')}:"
        ul
          - video_on_demand.errors.full_messages.each do |msg|
            li = msg

    .form-group
      = f.label :page_title, t('video_on_demands.partial_form.page_title')
      = f.text_field :page_title, class: 'form-control input-sm'

    .form-group
      = f.label :page_description, t('video_on_demands.partial_form.page_description')
      = f.text_area :page_description, class: 'form-control input-sm'

    hr

    .form-group
      = f.label :category_ids, t('video_on_demands.partial_form.categories')
      = f.select :category_ids,
                 categories.collect { |category| ["#{category.parent.title} > #{category.title}", category.id] },
                 {},
                 html_options = { class: 'form-control input-sm', multiple: 'true' }

    .form-group
      = f.label :title, t('video_on_demands.partial_form.title')
      = f.text_field :title, class: 'form-control input-sm'

    .row
      .col-xs-12.col-sm-4
        .form-group
          = f.label :abbreviation, t('video_on_demands.partial_form.abbr')
          = f.text_field :abbreviation, class: 'form-control input-sm'
      .col-xs-12.col-sm-4
        .form-group
          = f.label :level, t('video_on_demands.partial_form.level')
          = f.select :level,
                     [[t('video_on_demands.partial_form.beginner'), 'Beginner'],
                      [t('video_on_demands.partial_form.intermediate'), 'Intermediate'],
                      [t('video_on_demands.partial_form.advanced'), 'Advanced']],
                     { prompt: t('default.placeholder.select') },
                     { class: "form-control input-sm" }
      .col-xs-12.col-sm-4
        .form-group
          = f.label :price, t('video_on_demands.partial_form.price')
          .input-group
            span.input-group-addon $
            = f.text_field :price, data: { autonumeric: true }, class: 'form-control input-sm'

    .form-group
      = f.label :instructor_id, t('video_on_demands.partial_form.instructor')
      = f.select :instructor_id,
                 instructors.order('lower(last_name)').collect { |instructor| [instructor.full_name, instructor.id] },
                 { prompt: t('default.placeholder.select') },
                 { class: "form-control input-sm" }

    .row
      .col-xs-12.col-md-6
        .form-group
          - if video_on_demand.image.present? && video_on_demand.image.file.present?
            = image_tag video_on_demand.image.file_url(:subject_icon)
            br
          = f.fields_for :image do |icon|
            = icon.label :file, t('video_on_demands.partial_form.icon')
            = icon.file_field :file, class: 'form-control input-sm'
            = icon.hidden_field :file_cache
      .col-xs-12.col-md-3
        .form-group
          = f.label :partner_led, t('video_on_demands.partial_form.partner')
          br
          = f.check_box :partner_led
      .col-xs-12.col-md-3
        .form-group
          = f.label :active, t('video_on_demands.partial_form.active')
          br
          = f.check_box :active

    .form-group
      = f.label :heading, t('video_on_demands.partial_form.heading')
      = f.text_field :heading, class: 'form-control input-sm'

    .form-group
      = f.label :intro, t('video_on_demands.partial_form.introduction')
      = f.text_area :intro, class: 'form-control input-sm froala'

    .form-group
      = f.label :overview, t('video_on_demands.partial_form.overview')
      = f.text_area :overview, class: 'form-control input-sm froala'

    .form-group
      = f.label :outline, t('video_on_demands.partial_form.outline')
      = f.text_area :outline, class: 'form-control input-sm froala'

    .form-group
      = f.label :intended_audience, t('video_on_demands.partial_form.attend')
      = f.text_area :intended_audience, class: 'form-control input-sm froala'

    h4
      = t('video_on_demands.partial_form.modules')
    hr
    #modules
      = f.fields_for :video_modules do |ff|
        = render 'video_module_fields', f: ff
      .links
        = link_to_add_association t('video_on_demands.partial_form.add'), f, :video_modules

    .form-buttons
      button.btn.btn-success type="submit"
        = t('default.action.save')
      button.btn.btn-default type="button" data-dismiss="modal"
        = t('default.action.cancel')
      - if video_on_demand.id
        = link_to t('default.action.delete'), platform_video_on_demand_path(platform, video_on_demand), method: :delete, data: {confirm: t('default.prompt.confirm_delete')}, class: 'text-danger'
