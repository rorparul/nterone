wb = xlsx_package.workbook

wb.styles do |style|
  color = style.add_style(bg_color: '000066', fg_color: 'ffffff', b: true, :border => { :style => :thin, :color =>"ffffff" })
  h1 = style.add_style(sz: 16)
  currency = style.add_style(alignment: { horizontal: :right })

  # Summary
  #
  wb.add_worksheet(name: "Revenue Summary") do |sheet|
    sheet.add_row 
    sheet.add_row
    sheet.add_row [
      "",
      "NterOne Company Sales Report"
    ], style: h1
    sheet.add_row
    sheet.add_row
    total = @opportunities.group('origin_region').sum('amount')
    sum = 0
    Opportunity.origin_regions.each do |origin_region_name, origin_region|
      total[origin_region] ||= 0

      sheet.add_row [
        "",
        origin_region_name.humanize.gsub(/[A-Za-z']+/,&:capitalize),
        "",
        number_to_currency(total[origin_region])
      ], style: [nil, nil, nil, currency]
      sheet.add_row
      sum += total[origin_region]
    end
    sheet.add_row [
      "",
      "Total pipeline:",
      "",
      number_to_currency(sum)
    ], style: [nil, nil, nil, currency]
  end

  # By Regions
  #
  Opportunity.origin_regions.each do |origin_region_name, origin_region|

    wb.add_worksheet(name: "NterOne - #{origin_region_name.humanize.gsub(/[A-Za-z']+/,&:capitalize)}") do |sheet|

      if @remove_percent_column

        headers = [
          "Opportunity Owner",
          "Account Name",
          "Customer",
          "Course Catalog",
          'Close Date',
          "Amount"
        ]

        sheet.add_row headers, style: Array.new(headers.size, color)

        @employee_sales.where(origin_region: origin_region).group_by { |opportunity| opportunity.employee }.each do |employee, sales|
          sales.each do |sale|
            sheet.add_row [
              "#{employee.try(:full_name)}",
              "#{sale.account.try(:title)}",
              "#{sale.customer.try(:full_name)}",
              "#{sale.course.try(:title) || sale.title}",
              "#{sale.date_closed.strftime("%d-%m-%Y")}",
              "$#{number_with_delimiter(sale.amount)}"
            ]
          end

          sum_of_group_sales = [
            "",
            "",
            "",
            "",
            "Total",
            "$#{number_with_delimiter( sum_of(sales, 'amount') - sum_of(array_to_records(sales, Opportunity).lost, 'amount') )}"
          ]

          sheet.add_row sum_of_group_sales, style: Array.new(sum_of_group_sales.size, color)
        end

        @company_sales.where(origin_region: origin_region).each do |sale|
          sheet.add_row [
            "Company Sales",
            "#{sale.account.try(:title)}",
            "#{sale.customer.try(:full_name)}",
            "#{sale.course.try(:title) || sale.title}",
            "#{sale.date_closed.strftime("%d-%m-%Y")}",
            "$#{number_with_delimiter(sale.amount)}"
          ]
        end

        sum_of_company_sales = [
          "",
          "",
          "",
          "",
          "Total Company Sales",
          "$#{number_with_delimiter( sum_of(@company_sales.where(origin_region: origin_region), 'amount') - sum_of(@company_sales.where(origin_region: origin_region).lost, 'amount') )}"
        ]

        sheet.add_row sum_of_company_sales, style: Array.new(sum_of_company_sales.size, color)

        sum_of_all_sales = [
          "",
          "",
          "",
          "",
          "Total NterOne Sales",
          "$#{number_with_delimiter( sum_of(@opportunities.where(origin_region: origin_region), 'amount') - sum_of(@opportunities.where(origin_region: origin_region).lost, 'amount') )}"
        ]

        sheet.add_row sum_of_all_sales, style: Array.new(sum_of_all_sales.size, color)

      else

        headers = [
          "Opportunity Owner",
          "Account Name",
          "Customer",
          "Course Catalog",
          "Probability (%)",
          'Close Date',
          "Amount"
        ]

        sheet.add_row headers, style: Array.new(headers.size, color)

        @employee_sales.where(origin_region: origin_region).group_by { |opportunity| opportunity.employee }.each do |employee, sales|
          sales.each do |sale|
            sheet.add_row [
              "#{employee.try(:full_name)}",
              "#{sale.account.try(:title)}",
              "#{sale.customer.try(:full_name)}",
              "#{sale.course.try(:title) || sale.title}",
              "#{sale.stage}%",
              "#{sale.date_closed.strftime("%d-%m-%Y")}",
              "$#{number_with_delimiter(sale.amount)}"
            ]
          end

          sum_of_group_sales = [
            "",
            "",
            "",
            "",
            "",
            "Total",
            "$#{number_with_delimiter( sum_of(sales, 'amount') - sum_of(array_to_records(sales, Opportunity).lost, 'amount') )}"
          ]

          sheet.add_row sum_of_group_sales, style: Array.new(sum_of_group_sales.size, color)
        end

        @company_sales.where(origin_region: origin_region).each do |sale|
          sheet.add_row [
            "Company Sales",
            "#{sale.account.try(:title)}",
            "#{sale.customer.try(:full_name)}",
            "#{sale.course.try(:title) || sale.title}",
            "#{sale.stage}%",
            "#{sale.date_closed.strftime("%d-%m-%Y")}",
            "$#{number_with_delimiter(sale.amount)}"
          ]
        end

        sum_of_company_sales = [
          "",
          "",
          "",
          "",
          "Total Company Sales",
          "",
          "$#{number_with_delimiter( sum_of(@company_sales.where(origin_region: origin_region), 'amount') - sum_of(@company_sales.where(origin_region: origin_region).lost, 'amount') )}"
        ]

        sheet.add_row sum_of_company_sales, style: Array.new(sum_of_company_sales.size, color)

        sum_of_all_sales = [
          "",
          "",
          "",
          "",
          "Total NterOne Sales",
          "",
          "$#{number_with_delimiter( sum_of(@opportunities.where(origin_region: origin_region), 'amount') - sum_of(@opportunities.where(origin_region: origin_region).lost, 'amount') )}"
        ]

        sheet.add_row sum_of_all_sales, style: Array.new(sum_of_all_sales.size, color)
      end
    end
  end
  
  #Add a Business Breakdown tab  
  wb.add_worksheet(name: "Business Breakdown") do |sheet|
    kinds = direct_indirect_kinds
    companies = Company.companies_with_amount(@opportunities)                                
    headers = [""] + kinds + ["Total"] + companies.map(&:title)
    sheet.add_row headers, style: Array.new(headers.size, color) 
    sheet.add_row headers.map{|h| ""}, style: headers.each_with_index.map {|h,i| color if i==0 || i==9}

    @opportunities.group_by_months.each do |month, opportunities|
      opportunities_for_month = Opportunity.where(id: opportunities.map(&:id))

      amount_for_kinds = kinds.map{|kind| opportunities_for_month.for_company_kind(kind).amount_open}
 
      sheet.add_row ( [month.strftime("%b")] + 
                      array_to_numbers_with_delimiters(amount_for_kinds) +
                      ["$#{number_with_delimiter(amount_for_kinds.inject(:+))}"] + 
                      delimiter_companies_amount(companies, opportunities_for_month) 
                    ), style: headers.each_with_index.map {|h,i| color if i==0 || i==9}
      
      sheet.add_row headers.map{|h| ""}, style: headers.each_with_index.map {|h,i| color if i==0 || i==9}
    end
    
    amount_for_kinds = opportunities_amount_for_kinds(@opportunities) 
    amount_for_companies =  companies_amount(companies, @opportunities)
    total_for_all = amount_for_kinds + [amount_for_kinds.inject(:+)] + amount_for_companies
    
    sheet.add_row ([""] + array_to_numbers_with_delimiters(total_for_all)), style: Array.new(total_for_all.size + 1, color)
    
    grand_total = (amount_for_kinds + amount_for_companies).inject(:+)
    
    sheet.add_row [""] + array_percentages_of_total(grand_total, total_for_all)
  end
end
